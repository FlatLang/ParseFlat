package novex/parser/nova/nodes

import novex/astro/SyntaxErrorException
import novex/astro/InvalidParseException
import novex/astro/util/Location

import novex/astro/util/CompilerStringFunctions

/// @Node extension that represents
///
/// author: Braden Steffaniak
/// since:
/// version:
[AutoFinal]
class SingleLineCommentParser extends CommentParser {
    /// Parse the given input into a SingleLineComment node. If the input cannot be parsed
    /// into a SingleLineComment node, null is returned.
    ///
    /// #exampleInputs:
    ///     Example inputs:
    ///      *
    ///      *
    ///      *
    ///
    /// input:    The input string to parse into a SingleLineComment instance.
    /// parent:   The parent of the SingleLineComment node.
    /// location: The location of the input text in the source file.
    /// require:  Whether or not to throw a syntax error if the input could not
    ///           be parsed.
    /// return:   The parsed SingleLineComment node, if successful; null otherwise.
    public static parse(String input, Node parent = null, Location location = Location.INVALID, Bool require = true) -> SingleLineComment => null {
        if (input.startsWith("//")) {
            return SingleLineComment(parent, location, input.substring(2))
        }
    }
}